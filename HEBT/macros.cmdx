! convert current into K, using a fifth order polynomial
I2K_HEBT_QUs_fifth(MagName,biro) : macro {
  ! the macro expects IMagName, KMagName and FMagName to be defined
  ! eg. H2_012A_QUE -> I_H2_012A_QUE, K1_H2_012A_QUE, F_H2_012A_QUE
  K1_MagName = (-2.794551e-1
                +9.32005e-2   *abs(IMagName)
                -4.26890e-4   *abs(IMagName)^2
                +3.498485e-6  *abs(IMagName)^3
                -1.1996845e-8 *abs(IMagName)^4
                +1.3348656E-11*abs(IMagName)^5) /biro *abs(F_MagName);
  if (I_MagName<0){ K1_MagName=-K1_MagName; };
};

! convert current into K, using a linear dependence
I2K_HEBT_QUs_lin(MagName,biro) : macro {
  ! the macro expects IMagName, KMagName and FMagName to be defined
  ! eg. H2_012A_QUE -> I_H2_012A_QUE, K1_H2_012A_QUE, F_H2_012A_QUE
  ! gradiente integrato GL(T) = 3.258e-02 * I (A)
  ! lq = 0.45 m
  ! fromItoK = GL/(lq*Bro) 
  K1_MagName := 0.03258/(0.45*biro) *I_MagName *abs(F_MagName);
};

I2K_HEBT_CEBH(MagName,biro): macro {
  ! from SSavazzi, relation for MADbuilder
  ! the macro expects I_MagName, HKICK_MagName and F_MagName to be defined
  ! Lmag=0.52m;
  ! HKICK_MagName := ((2.615E-5-3.385E-4*I_MagName)/biro*0.52)*abs(F_MagName);
  !
  ! Magnetic Measurements doc, 2007, performed on prototype
  ! S:\Accelerating-System\Magnets\Magnetic Measurements\Frascati\HEBT\Documenti_misure_e_immagini\Correttori
  ! BLh[Tm]=-1.76 10-4 * I [A] + 1.36 10-5
  ! change sign: a negative vertical B-field (in both ref systems, i.e.
  !    measurements and MADX) kicks positively-charged particles towards x>0 in MADX
  HKICK_MagName :=-((-1.76E-4*I_MagName + 1.36E-5)/biro)*abs(F_MagName);
};

I2K_HEBT_CEBV(MagName,biro): macro {
  ! from SSavazzi, relation for MADbuilder
  ! the macro expects I_MagName, VKICK_MagName and F_MagName to be defined
  ! Lmag=0.52m;
  ! VKICK_MagName := ((2.981E-5-3.385E-4*I_MagName)/biro*0.52)*abs(F_MagName);
  !
  ! Magnetic Measurements doc, 2007, performed on prototype
  ! S:\Accelerating-System\Magnets\Magnetic Measurements\Frascati\HEBT\Documenti_misure_e_immagini\Correttori
  ! BLv[Tm]=-1.76 10-4 * I [A] + 1.55 10-5
  ! change sign: a negative horizontal B-field in measurements ref sys
  !    corresponds to a positive horizontal B-field in MADX, which kicks
  !    positively-charged particles towards y>0
  VKICK_MagName :=-((-1.76E-4*I_MagName + 1.55E-5)/biro)*abs(F_MagName);
};

save_strengths_particular(): macro {
   print, TEXT="";
   print, TEXT="! main dipole strengths [rad/m]";
   value, K0MB;
   print, TEXT="";
   print, TEXT="! quadrupole strengths [rad/m^2]";
   value, K1_H2_012A_QUE;
   value, K1_H2_016A_QUE;
   value, K1_H2_022A_QUE;
   value, K1_H4_003A_QUE;
   value, K1_H4_007A_QUE;
   value, K1_H4_013A_QUE;
   value, K1_H5_005A_QUE;
   value, K1_H5_009A_QUE;
   value, K1_H5_015A_QUE;
   value, K1_T1_004A_QUE;
   value, K1_T1_013A_QUE;
   value, K1_T1_019A_QUE;
   value, K1_T2_005A_QUE;
   value, K1_T2_012A_QUE;
   value, K1_T2_018A_QUE;
};

parseTable(): macro={
   if (iLine==1) {
      if (is_carbon==0) {
         READTABLE, file="LGEN/Protoni_Sala3_2021-02-13.tfs", table=table_settings;
      }else{
         READTABLE, file="LGEN/Carbonio_Sala3_FromRepoNovembre2020.tfs", table=table_settings;
      };
   }elseif (iLine==2) {
      if (is_carbon==0) {
         READTABLE, file="LGEN/Protoni_Sala2H_2021-02-13.tfs", table=table_settings;
      }else{
         READTABLE, file="LGEN/Carbonio_Sala2H_FromRepo.tfs", table=table_settings;
      };
   }elseif (iLine==3) {
      if (is_carbon==0) {
         READTABLE, file="LGEN/Protoni_Sala2V_2021-02-13.tfs", table=table_settings;
      }else{
         READTABLE, file="LGEN/Carbonio_Sala2V_FromRepo.tfs", table=table_settings;
      };
   }elseif (iLine==4) {
      if (is_carbon==0) {
         READTABLE, file="LGEN/Protoni_Sala1_2021-02-13.tfs", table=table_settings;
      }else{
         READTABLE, file="LGEN/Carbonio_Sala1_FromRepoNovembre2020.tfs", table=table_settings;
      };
   };
};

saveOptics(additional): macro={
  if (iLine==1) {
      exec, saveOpticsTFS(LineT_additional);
      exec, saveGeometryTFS(LineT_additional);
   }elseif (iLine==2) {
      exec, saveOpticsTFS(LineU_additional);
      exec, saveGeometryTFS(LineU_additional);
   }elseif (iLine==3) {
      exec, saveOpticsTFS(LineV_additional);
      exec, saveGeometryTFS(LineV_additional);
   }elseif (iLine==4) {
      exec, saveOpticsTFS(LineZ_additional);
      exec, saveGeometryTFS(LineZ_additional);
   };
};

saveStrengths(additional): macro={
  if (iLine==1) {
      exec, save_strengths(LineT_additional);
   }elseif (iLine==2) {
      exec, save_strengths(LineU_additional);
   }elseif (iLine==3) {
      exec, save_strengths(LineV_additional);
   }elseif (iLine==4) {
      exec, save_strengths(LineZ_additional);
   };
};

compute_RM_allCurrents(myMagName,myProperty,myI2K,fileName): macro={
   REMOVEFILE, FILE=fileName;
   exec, writeRMHeader(fileName);
   F_myMagName=1.0;
   nEnLevel=NEnLevelstart;
   WHILE (nEnLevel <= NEnLevelstop ) {
      ! loop throuth LGEN data
      SETVARS, TABLE=table_settings, ROW=nEnLevel;
      K0MB=K0MB_ref;
      call, file="settings_from_LGEN_table.str";
      
      ! notify user where we are
      PRINT, TEXT="==========================================================================================";
      PRINTF, TEXT="at Ek = %g MeV/u - BP = %g mm - row = %.0f ...", VALUE= Ek,BP,nEnLevel;
      PRINT, TEXT="==========================================================================================";

      ! loop through current values
      currI=Imin;
      while (currI<=Imax) {

         myProperty_myMagName_orig=myMagName->myProperty;
         I_myMagName=currI;
         exec, myI2K(myMagName,Brho);
         ! value, myMagName->myProperty;
         myMagName->myProperty=myProperty_myMagName;
         ! value, myMagName->myProperty;
         
         use,sequence=APICLS009;
         select,flag=twiss,clear;
         twiss, beta0=initial;

         ! save data
         kWrite=myProperty_myMagName;
         exec, writeRMObservations(fileName);

         ! reset kick to original value
         ! value, myMagName->myProperty;
         myMagName->myProperty=myProperty_myMagName_orig;
         ! value, myMagName->myProperty;

         ! get ready for new point
         currI=currI+Istep;
      };

      ! get ready for new point
      nEnLevel = nEnLevel+NEnLevelstep;
   };
};
